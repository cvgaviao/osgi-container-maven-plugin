/**
 * ============================================================================
 *  Copyright ©  2015-2019,    Cristiano V. Gavião
 *
 *  All rights reserved.
 *  This program and the accompanying materials are made available under
 *  the terms of the Eclipse Public License v1.0 which accompanies this
 *  distribution and is available at http://www.eclipse.org/legal/epl-v10.html
 *
 * ============================================================================
 */
package br.com.c8tech.tools.maven.plugin.osgi.container.it;

import java.io.File;

import org.junit.Test;
import org.junit.runner.RunWith;

import io.takari.maven.testing.executor.MavenExecutionResult;
import io.takari.maven.testing.executor.MavenRuntime.MavenRuntimeBuilder;
import io.takari.maven.testing.executor.MavenVersions;
import io.takari.maven.testing.executor.junit.MavenJUnitTestRunner;

@RunWith(MavenJUnitTestRunner.class)
@MavenVersions({ "3.6.0" })
public class FelixContainerArchiveGenerationIntegrationTest
        extends AbstractIntegrationTest {
    public FelixContainerArchiveGenerationIntegrationTest(MavenRuntimeBuilder builder)
            throws Exception {
        super(builder);
    }
    /**
     * Ensure that a container distribution archive is being generated using the
     * plugin internal default configuration.
     * 
     * @throws Exception
     */
    @Test
    public void testGenerateContainerArchiveDefault() throws Exception {
        File basedir = resources
                .getBasedir("it-project--felix-archive-gen-default");

        MavenExecutionResult result = mavenRuntime.forProject(basedir)
                .execute("clean", "package");

        result.assertErrorFreeLog();
    }

    /**
     * Ensure that a container distribution archive is being generated and the
     * configuration file are being generated based on the declared
     * dependencies.
     * 
     * @throws Exception
     */
    @Test
    public void testGenerateContainerArchiveWithAutoGeneratedConfigfile()
            throws Exception {
        File basedir = resources.getBasedir(
                "it-project--felix-archive-gen-configfile-autogen");

        MavenExecutionResult result = mavenRuntime.forProject(basedir)
                .execute("clean", "package");

        result.assertErrorFreeLog();
    }
}
